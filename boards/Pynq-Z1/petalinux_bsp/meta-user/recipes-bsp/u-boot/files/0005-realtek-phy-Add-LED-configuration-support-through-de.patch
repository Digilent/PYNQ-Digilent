From dd984d20961e7c2257d7fd4f9551aeae6f294365 Mon Sep 17 00:00:00 2001
From: Eliza Balas <ana-maria.balas@digilent.ro>
Date: Thu, 7 Jul 2022 00:07:07 +0300
Subject: [PATCH] realtek:phy: Add LED configuration support through devicetree

The Realtek RTL8211F driver sets non-default LED behavior:
	LED2=1000Mbps Link/Activity
	LED1=Link
	LED0=Activity.
This can be overridden from the device-tree.
---
 doc/device-tree-bindings/phy/realtek.txt | 17 +++++
 drivers/net/phy/realtek.c                | 83 +++++++++++++++++++++++-
 include/dt-bindings/phy/realtek.h        | 13 ++++
 3 files changed, 110 insertions(+), 3 deletions(-)
 create mode 100644 doc/device-tree-bindings/phy/realtek.txt
 create mode 100644 include/dt-bindings/phy/realtek.h

diff --git a/doc/device-tree-bindings/phy/realtek.txt b/doc/device-tree-bindings/phy/realtek.txt
new file mode 100644
index 0000000000..e5f601f6da
--- /dev/null
+++ b/doc/device-tree-bindings/phy/realtek.txt
@@ -0,0 +1,17 @@
+Realtek PHY driver
+
+Introduces optional property to control LED behavior on the RTL8211F.
+Also see net/phy.txt.
+
+Optional properties:
+- realtek,leds-config    : three integers with mode options for each LED
+
+Example:
+#include <dt-bindings/phy/realtek.h>
+
+ethernet-phy@0 {
+	reg = <0>;
+	realtek,leds-config = <(REALTEK_LED_LINK10 | REALTEK_LED_ACT) \
+			       (REALTEK_LED_LINK100)
+			       (REALTEK_LED_DEFAULT)>;
+};
diff --git a/drivers/net/phy/realtek.c b/drivers/net/phy/realtek.c
index 8f1d759632..0c775df1ae 100644
--- a/drivers/net/phy/realtek.c
+++ b/drivers/net/phy/realtek.c
@@ -9,6 +9,7 @@
 #include <common.h>
 #include <linux/bitops.h>
 #include <phy.h>
+#include <dt-bindings/phy/realtek.h>
 
 #define PHY_RTL8211x_FORCE_MASTER BIT(1)
 #define PHY_RTL8211E_PINE64_GIGABIT_FIX BIT(2)
@@ -58,6 +59,12 @@
 #define MIIM_RTL8211F_TX_DELAY		0x100
 #define MIIM_RTL8211F_LCR		0x10
 
+#define MIIM_RTL8211F_LCR_LEDx_MASK	0x1bu
+
+struct realtek_private {
+	u32 led_config[3];
+};
+
 static int rtl8211f_phy_extread(struct phy_device *phydev, int addr,
 				int devaddr, int regnum)
 {
@@ -85,6 +92,54 @@ static int rtl8211f_phy_extwrite(struct phy_device *phydev, int addr,
 	return 0;
 }
 
+
+#if defined(CONFIG_DM_ETH)
+/**
+ * dp83867_data_init - Convenience function for setting PHY specific data
+ *
+ * @phydev: the phy_device struct
+ */
+static int realtek_of_init(struct phy_device *phydev)
+{
+        struct realtek_private *prv = phydev->priv;
+	ofnode node;
+	int ret;
+	unsigned int i;
+
+	node = phy_get_ofnode(phydev);
+	if (!ofnode_valid(node))
+		return -EINVAL;
+	
+	if ((ret = ofnode_read_u32_array(node, "realtek,leds-config",
+	                          prv->led_config, 3)))
+	{
+		for(i=0; i<sizeof(prv->led_config)/sizeof(prv->led_config[0]); ++i)
+                	prv->led_config[i] = REALTEK_LED_DEFAULT;
+	} else
+	{
+		printf("Realtek PHY loading custom LED configuration\n");
+	}
+
+
+	for(i=0; i<sizeof(prv->led_config)/sizeof(prv->led_config[0]); ++i)
+                prv->led_config[i] &= (REALTEK_LED_LINK10|REALTEK_LED_LINK100| 
+		                      REALTEK_LED_LINK1000|REALTEK_LED_ACT|
+				      REALTEK_LED_DEFAULT);
+
+        return 0;
+}
+#else
+static int realtek_of_init(struct phy_device *phydev)
+{
+	struct realtek_private *prv = phydev->priv;
+	unsigned int i;
+
+	for(i=0; i<sizeof(prv->led_config)/sizeof(prv->led_config[0]); ++i)
+		prv->led_config[i] = REALTEK_LED_DEFAULT;
+	return 0;
+}
+#endif
+
 static int rtl8211b_probe(struct phy_device *phydev)
 {
 #ifdef CONFIG_RTL8211X_PHY_FORCE_MASTER
@@ -160,6 +215,12 @@ static int rtl8211x_config(struct phy_device *phydev)
 static int rtl8211f_config(struct phy_device *phydev)
 {
 	u16 reg;
+	struct realtek_private *prv = phydev->priv;
+	int ret;
+
+	ret = realtek_of_init(phydev);
+	if (ret)
+		return ret;
 
 	if (phydev->flags & PHY_RTL8211F_FORCE_EEE_RXC_ON) {
 		unsigned int reg;
@@ -187,10 +248,26 @@ static int rtl8211f_config(struct phy_device *phydev)
 	phy_write(phydev, MDIO_DEVAD_NONE,
 		  MIIM_RTL8211F_PAGE_SELECT, 0x0);
 
-	/* Set green LED for Link, yellow LED for Active */
+	/* Set defaults: LED2=L1000+A, LED1=L10/100/1000, LED0=L10/100/10000+A */
+	reg = 0x617f;
+	if (!(prv->led_config[0] & REALTEK_LED_DEFAULT))
+	{
+		reg &= ~(MIIM_RTL8211F_LCR_LEDx_MASK);
+		reg |= (prv->led_config[0] & (MIIM_RTL8211F_LCR_LEDx_MASK));
+	}
+	if (!(prv->led_config[1] & REALTEK_LED_DEFAULT))
+        {
+                reg &= ~(MIIM_RTL8211F_LCR_LEDx_MASK<<5);
+                reg |= (prv->led_config[1] & (MIIM_RTL8211F_LCR_LEDx_MASK))<<5;
+        }
+	if (!(prv->led_config[2] & REALTEK_LED_DEFAULT))
+        {
+                reg &= ~(MIIM_RTL8211F_LCR_LEDx_MASK<<10);
+                reg |= (prv->led_config[2] & (MIIM_RTL8211F_LCR_LEDx_MASK))<<10;
+        }
 	phy_write(phydev, MDIO_DEVAD_NONE,
-		  MIIM_RTL8211F_PAGE_SELECT, 0xd04);
-	phy_write(phydev, MDIO_DEVAD_NONE, 0x10, 0x617f);
+                  MIIM_RTL8211F_PAGE_SELECT, 0xd04);
+	phy_write(phydev, MDIO_DEVAD_NONE, 0x10, reg);
 	phy_write(phydev, MDIO_DEVAD_NONE,
 		  MIIM_RTL8211F_PAGE_SELECT, 0x0);
 
diff --git a/include/dt-bindings/phy/realtek.h b/include/dt-bindings/phy/realtek.h
new file mode 100644
index 0000000000..7b8fad4e1a
--- /dev/null
+++ b/include/dt-bindings/phy/realtek.h
@@ -0,0 +1,13 @@
+/*
+ Constants for Realtek PHY LED configuration modes
+*/
+#ifndef _DT_BINDINGS_PHY_REALTEK
+#define _DT_BINDINGS_PHY_REALTEK
+
+#define REALTEK_LED_LINK10              BIT(0)
+#define REALTEK_LED_LINK100             BIT(1)
+#define REALTEK_LED_LINK1000            BIT(3)
+#define REALTEK_LED_ACT                 BIT(4)
+#define REALTEK_LED_DEFAULT             BIT(7)
+
+#endif /* _DT_BINDINGS_PHY_REALTEK */
-- 
2.35.1

